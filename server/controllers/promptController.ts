import { RequestHandler } from 'express';
import { ServerError } from '../../types/types';
import { fileURLToPath } from 'url';
import fs from 'fs';
import path from 'path';

export const parseArguments: RequestHandler = async (_req, res, next) => {
  const { user_arguments, ai_arguments } = res.locals;

  const maxLen = Math.max(user_arguments.length, ai_arguments.length);

  let parsedArguments = '';

  //  parseArguments:
  //   Round 1 (AI): res.locals.ai_argument[0]
  //   Round 1 (user): res.locals.user_argument[0]
  //   Round 2 (AI): res.locals.ai_argument[1]
  //   Round 2 (user): res.locals.user_argument[1]
  //   ...

  for (let i = 0; i < maxLen; i++) {
    if (ai_arguments[i]) {
      // Add to parsed Arguments
      parsedArguments += `Round ${i + 1} (AI): ${ai_arguments[i]}`;
    }

    if (user_arguments[i]) {
      parsedArguments += `Round ${i + 1} (User): ${user_arguments[i]}`;
    }
  }

  res.locals.parsedArguments = parsedArguments;

  return next();
};

export const parseTopic: RequestHandler = async (_req, res, next) => {
  const { topic } = res.locals;

  const topicLookupTable: any = {
    'AI intelligence': 'AI could eventually have true intelligence',
  };
  const parsedTopic = topicLookupTable[topic];

  res.locals.parsedTopic = parsedTopic;
  return next();
};

export const customizePrompts: RequestHandler = async (_req, res, next) => {
  const { parsedArguments, parsedTopic, userSide } = res.locals;
  if (!parsedArguments) {
    // This is the initial argument to be generated by AI
  }
  const ai_side = userSide === 'pro' ? 'for' : 'against';

  const role =
    'You are a philosopher of artificial intelligence engaged in a back and forth dialogue with a user, where each person gets 3 rounds to make their argument total. ';
  const goal = `You are crafting a three-part argument ${ai_side} the idea that ${parsedTopic}. 
    `;
  const instructions = `
  You are currently in the round ${res.locals.round} of the debate with a human (user). You are representing the AI side.
  
  This is the existing debate between the user and AI so far: 
  ${parseArguments}

  Please follow these instructions carefully: 
    - You will be sending one part of your argument at a time. 
    - For the first part of your argument, you will be crafting an initial argument about the topic and you will be expecting a rebuttal. 
    - After that, you will craft your next two parts of the argument by responding to particular elements of the user's rebuttal. 
    - You will be crafting each section of argument in response to the user's rebuttal of your previous claim.
  `;

  const numOfPairs = 6;

  const responseFormat = `
  Your response will be passed to the frontend as a JSON object. Follow these instructions carefully: 
    - Your response should be a JSON object that contains ${numOfPairs} key-value pairs.
    - The first key should be "ai_arguments" and have the value set as your counter argument.
    - The second key should be "ai_reasoning" and have the value set as your reason for providing this counter argument.
    - The third key should be "ai_strong_point" and have the value set as the perceived strengths of your counter argument.
    - The fourth key should be "ai_weak_point" and have the value set as a the perceived weaknesses of your counter argument.
    - The fifth key should be "user_strong_point" and have the value set as the perceived strengths in the user's latest argument (if a user argument exists in the ${parseArguments}).
    - The second key should be "user_weak_point" and have the value set as a the perceived weaknesses in the user's latest argument (if a user argument exists in the ${parseArguments}).
  
  `;
  const systemContent = role + goal + instructions + responseFormat;

  res.locals.systemContent = systemContent;
  return next();
};
